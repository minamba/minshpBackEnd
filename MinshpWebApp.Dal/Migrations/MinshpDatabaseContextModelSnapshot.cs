// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinshpWebApp.Dal.Entities;

#nullable disable

namespace MinshpWebApp.Dal.Migrations
{
    [DbContext(typeof(MinshpDatabaseContext))]
    partial class MinshpDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DisplayNewProductNumber")
                        .HasColumnType("int")
                        .HasColumnName("Display_new_product_number");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("End_date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Start_date");

                    b.HasKey("Id");

                    b.ToTable("Application", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.BillingAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplementaryAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Complementary_address");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCustomer")
                        .HasColumnType("int")
                        .HasColumnName("Id_customer");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int")
                        .HasColumnName("Postal_code");

                    b.HasKey("Id");

                    b.HasIndex("IdCustomer");

                    b.ToTable("Billing_address", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdPromotionCode")
                        .HasColumnType("int")
                        .HasColumnName("Id_promotion_code");

                    b.Property<string>("IdTaxe")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Id_taxe");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("First_name");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Last_name");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phone_number");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.DeliveryAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplementaryAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Complementary_address");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Favorite")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCustomer")
                        .HasColumnType("int")
                        .HasColumnName("Id_customer");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int")
                        .HasColumnName("Postal_code");

                    b.HasKey("Id");

                    b.HasIndex("IdCustomer");

                    b.ToTable("Delivery_address", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("Id_category");

                    b.Property<int?>("IdFeatureCategory")
                        .HasColumnType("int")
                        .HasColumnName("Id_feature_category");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("Feature", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.FeatureCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Feature_category", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("Id_category");

                    b.Property<int?>("Id_product")
                        .HasColumnType("int")
                        .HasColumnName("Id_product");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductNavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("Id_product")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderNumber")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Order_number");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdProductNavigationId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Creation_Date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdPromotionCode")
                        .HasColumnType("int")
                        .HasColumnName("Id_promotion_code");

                    b.Property<int?>("Id_Category")
                        .HasColumnType("int")
                        .HasColumnName("Id_Category");

                    b.Property<bool?>("Main")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Modification_Date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Category");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdProduct")
                        .HasColumnType("int")
                        .HasColumnName("Id_product");

                    b.Property<int?>("Id_feature")
                        .HasColumnType("int")
                        .HasColumnName("Id_feature");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.HasIndex("Id_feature");

                    b.ToTable("Product_feature", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_creation");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Id_product")
                        .HasColumnType("int")
                        .HasColumnName("Id_product");

                    b.Property<int?>("Purcentage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Id_product");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.PromotionCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_creation");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("End_date");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Purcentage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Start_date");

                    b.HasKey("Id")
                        .HasName("PK_Promo_code");

                    b.ToTable("Promotion_code", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdProduct")
                        .HasColumnType("int")
                        .HasColumnName("Id_product");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Taxe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Purcentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Taxe", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id_product")
                        .HasColumnType("int")
                        .HasColumnName("Id_product");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_product");

                    b.ToTable("Video", (string)null);
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.BillingAddress", b =>
                {
                    b.HasOne("MinshpWebApp.Dal.Entities.Customer", "IdCustomerNavigation")
                        .WithMany("BillingAddresses")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Billing_address_Customer");

                    b.Navigation("IdCustomerNavigation");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.DeliveryAddress", b =>
                {
                    b.HasOne("MinshpWebApp.Dal.Entities.Customer", "IdCustomerNavigation")
                        .WithMany("DeliveryAddresses")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Delivery_address_Customer");

                    b.Navigation("IdCustomerNavigation");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Feature", b =>
                {
                    b.HasOne("MinshpWebApp.Dal.Entities.Category", "IdCategoryNavigation")
                        .WithMany("Features")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Feature_Category");

                    b.Navigation("IdCategoryNavigation");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Order", b =>
                {
                    b.HasOne("MinshpWebApp.Dal.Entities.Customer", "IdCustomerNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdCustomer")
                        .HasConstraintName("FK_Order_Customer");

                    b.HasOne("MinshpWebApp.Dal.Entities.Product", "IdProductNavigation")
                        .WithMany()
                        .HasForeignKey("IdProductNavigationId");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Product", b =>
                {
                    b.HasOne("MinshpWebApp.Dal.Entities.Category", "IdCategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("Id_Category")
                        .HasConstraintName("FK_Product_Category");

                    b.Navigation("IdCategoryNavigation");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.ProductFeature", b =>
                {
                    b.HasOne("MinshpWebApp.Dal.Entities.Product", "IdProductNavigation")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Product_feature_Product");

                    b.HasOne("MinshpWebApp.Dal.Entities.Feature", "IdFeatureNavigation")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("Id_feature")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Product_feature_Feature");

                    b.Navigation("IdFeatureNavigation");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Promotion", b =>
                {
                    b.HasOne("MinshpWebApp.Dal.Entities.Product", "IdProductNavigation")
                        .WithMany("Promotions")
                        .HasForeignKey("Id_product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Promotion_Product");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Stock", b =>
                {
                    b.HasOne("MinshpWebApp.Dal.Entities.Product", "IdProductNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Stock_Product");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Video", b =>
                {
                    b.HasOne("MinshpWebApp.Dal.Entities.Product", "IdProductNavigation")
                        .WithMany("Videos")
                        .HasForeignKey("Id_product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Video_Product");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Category", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Customer", b =>
                {
                    b.Navigation("BillingAddresses");

                    b.Navigation("DeliveryAddresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Feature", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("MinshpWebApp.Dal.Entities.Product", b =>
                {
                    b.Navigation("ProductFeatures");

                    b.Navigation("Promotions");

                    b.Navigation("Stocks");

                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
